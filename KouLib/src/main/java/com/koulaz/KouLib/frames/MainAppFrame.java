/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.koulaz.KouLib.frames;

import com.koulaz.KouLib.entities.Book;
import com.koulaz.KouLib.tools.CustomFileReader;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Lazaros
 */
public class MainAppFrame extends javax.swing.JFrame {

    Book[] books;

    /**
     * Creates new form NewJFrame
     */
    public MainAppFrame() {
        books = new CustomFileReader().getBooksFromFile();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KoulLib");

        jLabel1.setText("Books:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/koulaz/KouLib/frames/resources/add_Book.gif"))); // NOI18N
        jButton1.setText("New Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bookTable.setModel(new BookTableModel(books));
        jScrollPane1.setViewportView(bookTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        NewBookFrame newBookFrame = new NewBookFrame();
        newBookFrame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    class BookTableModel extends AbstractTableModel {

        private Book[] books;

        public BookTableModel(Book[] books) {
            this.books = books;
        }

        @Override
        public int getRowCount() {
            return books.length;
        }

        @Override
        public int getColumnCount() {

            return 2;
        }

        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "Title";
                case 1:
                    return "Author";
            }
            return "";

        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Book book = books[rowIndex];
            switch (columnIndex) {
                case 0:
                    return book.getBookName();
                case 1:
                    return book.getBookAuthor();
            }
            return null;
        }
    }

}
